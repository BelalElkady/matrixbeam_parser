#include "BabyLINCAN.h"
typedef int (BLC_registerFrameCallback_t)(BL_HANDLE handle, BLC_frame_callback_func *callback);
typedef int (BLC_registerSignalCallback_t)(BL_HANDLE handle, BLC_signal_callback_func *callback);
typedef int (BLC_registerErrorCallback_t)(BL_HANDLE handle, BLC_error_callback_func *callback);
typedef int (BLC_registerMacroStateCallback_t)(BL_HANDLE handle, BLC_macrostate_callback_func *callback);
typedef int (BLC_registerDebugCallback_t)(BL_HANDLE handle, BLC_debug_callback_func *callback);
typedef int (BLC_registerDTLRequestCallback_t)(BL_HANDLE handle, BLC_dtl_request_callback_func *callback);
typedef int (BLC_registerDTLResponseCallback_t)(BL_HANDLE handle, BLC_dtl_request_callback_func *callback);
typedef int (BLC_sendCommand_t)(BL_HANDLE handle, const char *command);
typedef int (BLC_Reset_t)(BL_HANDLE handle);
typedef int (BLC_getBabyLinPorts_t)(BLC_PORTINFO portListToBeFilled[], int *pFoundPortCount);
// typedef BL_HANDLE		(BLC_open_t)( unsigned int port);
typedef BL_HANDLE (BLC_open_t)(const char *port);
typedef int (BLC_close_t)(BL_HANDLE handle);
typedef int (BLC_closeAll_t)(void);
typedef int (BLC_getTargetID_t)(BL_HANDLE handle, BL_targetid_t *targetID);
typedef int (BLC_getHWType_t)(BL_HANDLE handle);
typedef int (BLC_getChannelCount_t)(BL_HANDLE handle);
typedef BL_HANDLE (BLC_getChannelHandle_t)(BL_HANDLE handle, int channelId);
typedef int (BLC_getChannelInfo_t)(BL_HANDLE handle, BLC_CHANNELINFO *pinfo);
typedef int (BLC_getLastError_t)(BL_HANDLE handle, char *pErrorBuffer, int bufferLength);
typedef int (BLC_loadSDF_t)(BL_HANDLE handle, const char *filename, int download);
typedef int (BLC_downloadSDF_t)(BL_HANDLE handle);
typedef int (BLC_getSDFInfo_t)(BL_HANDLE handle, BLC_SDFINFO *pSDFInfo);
typedef int (BLC_getSectionInfo_t)(BL_HANDLE handle, int infoAboutSectionNr, BLC_SECTIONINFO *pSectionInfo);
typedef int (BLC_getNodeCount_t)(BL_HANDLE handle);
typedef int (BLC_getNodeName_t)(BL_HANDLE handle, int idx, char *dstbuf, int buflen);
typedef int (BLC_getFrameCount_t)(BL_HANDLE handle);
typedef int (BLC_getFrameName_t)(BL_HANDLE handle, int idx, char *dstbuf, int buflen);
typedef int (BLC_getSignalCount_t)(BL_HANDLE handle);
typedef int (BLC_getSignalName_t)(BL_HANDLE handle, int idx, char *dstbuf, int buflen);
typedef int (BLC_getSignalsInFrameCount_t)(BL_HANDLE handle, int idx);
typedef int (BLC_getFrameNrForFrameId_t)(BL_HANDLE handle, unsigned char frameId);
typedef int (BLC_sendRaw_t)(BL_HANDLE handle, const unsigned char *command, unsigned int *length);
typedef int (BLC_setDTLMode_t)(BL_HANDLE handle, int mode);
typedef int (BLC_getDTLRequestStatus_t)(BL_HANDLE handle);
typedef int (BLC_getDTLResponseStatus_t)(BL_HANDLE handle);
typedef int (BLC_lastAnswerHasData_t)(BL_HANDLE handle);
typedef int (BLC_getAnswerTypeByName_t)(BL_HANDLE handle, const char *name, BL_ANSWER_TYPE *type, size_t *length);
typedef int (BLC_getAnswerNameByIndex_t)(BL_HANDLE handle, int index, char *nameBuffer, int *nameBufferLength);
typedef int (BLC_getAnswerTypeByIndex_t)(BL_HANDLE handle, const unsigned int index, BL_ANSWER_TYPE *type, size_t *length);
typedef int (BLC_getAnswerByName_t)(BL_HANDLE handle, const char *name, void *buffer, size_t length);
typedef int (BLC_getAnswerByIndex_t)(BL_HANDLE handle, const unsigned int index, void *buffer, size_t length);
typedef int (BLC_getLastFrame_t)(BL_HANDLE handle, int frameNr, BLC_FRAME *framedata);
typedef int (BLC_getNextFrame_t)(BL_HANDLE handle, BLC_FRAME *framedata);
typedef int (BLC_getNextSignal_t)(BL_HANDLE handle, BLC_SIGNAL *signaldata);
typedef int (BLC_getNextBusError_t)(BL_HANDLE handle, BL_error_t *errordata);
typedef int (BLC_getNextDTLRequest_t)(BL_HANDLE handle, BL_dtl_t *frame);
typedef int (BLC_getNextDTLResponse_t)(BL_HANDLE handle, BL_dtl_t *frame);
typedef int (BLC_getSignalValue_t)(BL_HANDLE handle, int signalNr, unsigned short *value);
typedef int (BLC_getSignalValueByName_t)(BL_HANDLE handle, const char *signalName, unsigned short *value);
typedef int (BLC_getSignalArray_t)(BL_HANDLE handle, int signalNr, unsigned char *array);
typedef int (BLC_getSignalArrayByName_t)(BL_HANDLE handle, const char *signalName, unsigned char *array);
typedef int (BLC_isSignalArray_t)(BL_HANDLE handle, int idx);
typedef int (BLC_encodeSignal_t)(BL_HANDLE handle, int signalNr, unsigned int value, char *encSignal, size_t *buffLen0, char *encUnit, size_t *buffLen1);
